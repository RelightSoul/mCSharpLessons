// Индексы и диапазоны

//  В C# 8.0 была добавлена новая функциональность - индексы и диапазоны, которые упрощают получение
//  из массивов подмассивов. Для этого в C# есть два типа: System.Range и System.Index. Оба типа являются
//  структурами. Тип Range представляет некоторый диапазон значений в некоторой последовательность, а тип
//  Index - индекс в последовательности.

#region Индексы
//  Индекс фактически представляет числовое значение, и при определении индекса мы можем указать это значение:

Index myIndex1 = 2;     // третий элемент
Index myIndex2 = ^2;    // предпоследний элемент

string[] people = { "Tom", "Bob", "Sam", "Kate", "Alice" };
string selected1 = people[myIndex1];    // Sam
string selected2 = people[myIndex2];    // Kate

// Фактически для данной задачи индексы не нужны, и мы можем воспользоваться стандартными возможностями массивов:
string selected3 = people[2];                    // Sam
string selected4 = people[people.Length - 2];    // Kate

//  То есть в подобных ситуациях плюсом индексов является большая удобочитаемость. Так, people[^2] более
//  читабельно, чем people[people.Length - 2].
#endregion

#region Диапазон
//  Диапазон представляет часть последовательности, которая ограничена двумя индексами. Начальный индекс
//  включается в диапазон, а конечный индекс НЕ входит в диапазон. Для определения диапазона применяется
//  оператор  ..
Range myRange1 = 1..4; // по 1-го индекса включая по 4-й индекс не включая
//  Практическое применение диапазонов - получим со второго по четвертый элементы массива:
string[] people2 = { "Tom", "Bob", "Sam", "Kate", "Alice" };
string[] peopleRange = people2[1..4]; // получаем 2, 3 и 4-й элементы из массива //Bob, Sam, Kate

//  Мы можем задать для диапазона только конечный индекс. В этом случае начальным индексом по умолчанию будет 0.
string[] peopleRange33 = people2[..4];  // Tom, Bob, Sam, Kate

//  Используя индексы относительно конца последовательности, можно получать диапазон относительно конца
//  последовательности:
string[] peopleRange1 = people[^2..];       // два последних - Kate, Alice
string[] peopleRange2 = people[..^1];       // начиная с предпоследнего - Tom, Bob, Sam, Kate
string[] peopleRange3 = people[^3..^1];     // два начиная с предпоследнего - Sam, Kate

//  Кроме массивов индексы и диапазоны также применяются к объектам Span и ReadOnlySpan:
string[] people3 = { "Tom", "Bob", "Sam", "Kate", "Alice" };
Span<string> peopleSpan = people3;
Span<string> selectedPeopleSpan = peopleSpan[1..4];
foreach (var person in selectedPeopleSpan)
{
    Console.WriteLine(person);
}
#endregion