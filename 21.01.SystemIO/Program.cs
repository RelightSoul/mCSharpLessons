//  Работа с файловой системой

//  Большинство задач в программировании так или иначе связаны с работой с файлами и каталогами. Нам может
//  потребоваться прочитать текст из файла или наоборот произвести запись, удалить файл или целый каталог,
//  не говоря уже о более комплексных задачах, как например, создание текстового редактора и других подобных
//  задачах.

//  Фреймворк.NET предоставляет большие возможности по управлению и манипуляции файлами и каталогами, которые
//  по большей части сосредоточены в пространстве имен System.IO. Классы, расположенные в этом пространстве
//  имен (такие как Stream, StreamWriter, FileStream и др.), позволяют управлять файловым вводом-выводом.

#region Работа с дисками
//  Работу с файловой системой начнем с самого верхнего уровня - дисков. Для представления диска в пространстве
//  имен System.IO имеется класс DriveInfo.

//  Этот класс имеет статический метод GetDrives(), который возвращает имена всех логических дисков компьютера.
//  Также он предоставляет ряд полезных свойств:
//  AvailableFreeSpace: указывает на объем доступного свободного места на диске в байтах
//  DriveFormat: получает имя файловой системы
//  DriveType: представляет тип диска    
//  IsReady: готов ли диск (например, DVD-диск может быть не вставлен в дисковод)
//  Name: получает имя диска
//  RootDirectory: возвращает корневой каталог диска
//  TotalFreeSpace: получает общий объем свободного места на диске в байтах
//  TotalSize: общий размер диска в байтах
//  VolumeLabel: получает или устанавливает метку тома
DriveInfo[] drivers = DriveInfo.GetDrives();
foreach (DriveInfo driver in drivers)
{
    Console.WriteLine(driver.Name);
    Console.WriteLine(driver.DriveType);
    if (driver.IsReady)
    {
        Console.WriteLine(driver.TotalSize);
        Console.WriteLine(driver.TotalFreeSpace);
        Console.WriteLine(driver.VolumeLabel);
    }
    Console.WriteLine();
}
#endregion