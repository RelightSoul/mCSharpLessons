//  Работа со строками
//  Строки и класс String

//  Довольно большое количество задач, которые могут встретиться при разработке приложений,
//  так или иначе связано с обработкой строк - парсинг веб-страниц, поиск в тексте, какие-то
//  аналитические задачи, связанные с извлечением нужной информации из текста и т.д. Поэтому
//  в этом плане работе со строками уделяется особое внимание.

//  В языке C# строковые значения представляет тип string, а вся функциональность работы с
//  данным типом сосредоточена в классе System.String. Собственно string является псевдонимом
//  для класса String. Объекты этого класса представляют текст как последовательность символов
//  Unicode. Максимальный размер объекта String может составлять в памяти 2 ГБ, или около 1 миллиарда символов.

#region Создание строк
//  Создавать строки можно, как используя переменную типа string и присваивая ей значение, так и применяя один 
//  из конструкторов класса String:
string s1 = "hello";
string s2 = new string('a', 6); // aaaaaa
string s3 = new string(new char[] {'w','o','r','l','d'});   // world
string s4 = new string(new char[] { 'w', 'o', 'r', 'l', 'd' },1,3); // orl
//  Конструктор String имеет различное число версий.
#endregion

#region Строка как набор символов
//  Так как строка хранит коллекцию символов, в ней определен индексатор для доступа к этим символам:

//          public char this[int index] {get;}

//  Применяя индексатор, мы можем обратиться к строке как к массиву символов и получить по индексу
//  любой из ее символов:

string message = "hello";
char firstChar = message[1];  // e
Console.WriteLine(message.Length);  // длина строки
Console.WriteLine();
#endregion

#region Перебор строк
//  Класс String реализует интерфейс IEnumerable, благодаря чему строку можно перебрать в цикле foreach как
//  набор объектов char. Также можно с помощью других типов циклов перебрать строку, применяя обращение к
//  символам по индексу:
string message2 = "hello";
for (var i = 0; i < message2.Length; i++)
{
    Console.WriteLine(message2[i]);
}
Console.WriteLine();
foreach (char c in message2)
{
    Console.WriteLine(c);
}
Console.WriteLine();
#endregion

#region Сравнение строк
//  В отличие от других классов строки сравниваются по значению их символов, а не по ссылкам:
Console.WriteLine(message == message2); //true
#endregion

#region Основные методы строк
//Основная функциональность класса String раскрывается через его методы, среди которых можно выделить следующие:

//Compare: сравнивает две строки с учетом текущей культуры (локали) пользователя

//CompareOrdinal: сравнивает две строки без учета локали

//Contains: определяет, содержится ли подстрока в строке

//Concat: соединяет строки

//CopyTo: копирует часть строки, начиная с определенного индекса в массив

//EndsWith: определяет, совпадает ли конец строки с подстрокой

//Format: форматирует строку

//IndexOf: находит индекс первого вхождения символа или подстроки в строке

//Insert: вставляет в строку подстроку

//Join: соединяет элементы массива строк

//LastIndexOf: находит индекс последнего вхождения символа или подстроки в строке

//Replace: замещает в строке символ или подстроку другим символом или подстрокой

//Split: разделяет одну строку на массив строк

//Substring: извлекает из строки подстроку, начиная с указанной позиции

//ToLower: переводит все символы строки в нижний регистр

//ToUpper: переводит все символы строки в верхний регистр

//Trim: удаляет начальные и конечные пробелы из строки
#endregion
