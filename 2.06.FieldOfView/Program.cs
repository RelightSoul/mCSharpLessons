// Каждая переменная доступна в рамках определенного контекста или области видимость.
// Вне этого контекста переменная уже не существует.

//Существуют различные контексты:

//Контекст класса.Переменные, определенные на уровне класса, доступны в любом методе этого класса.
//Их еще называют глобальными переменными или полями

//Контекст метода.Переменные, определенные на уровне метода, являются локальными и доступны только
//в рамках данного метода.В других методах они недоступны

//Контекст блока кода. Переменные, определенные на уровне блока кода, также являются локальными
//и доступны только в рамках данного блока. Вне своего блока кода они не доступны.

namespace _2._06.FieldOfView
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Person tom = new();
            tom.PrintName();
            tom.PrintSurName();
        }
    }
    class Person                                        // начало контекста класса
    {
        string type = "Person";                         // переменная уровня класса
        public void PrintName()                         // начало контекста метода PrintName
        {
            string name = "Tom";                        // переменная уровня метода

            {                                           // начало контекста блока кода
                string shortName = "Tomas";             // переменная уровня блока кода
                Console.WriteLine(type);                // в блоке доступна переменная класса
                Console.WriteLine(name);                // в блоке доступна переменная окружающего метода
                Console.WriteLine(shortName);           // в блоке доступна переменная этого же блока
            }                                           // конец контекста блока кода, переменная shortName уничтожается

            Console.WriteLine(type);                    // в методе доступна переменная класса
            Console.WriteLine(name);                    // в методе доступна переменная этого же метода
            //Console.WriteLine(shortName);             // так нельзя, переменная c определена в блоке кода
            //Console.WriteLine(surname);               // так нельзя, переменная surname определена в другом методе

        }                                               // конец контекста метода PrintName, переменная name уничтожается                                                   

        public void PrintSurName()                           // начало контекста метода PrintSurname
        {
            string surName = "Smith";                   // переменная уровня метода

            Console.WriteLine(type);                    // в методе доступна переменная класса
            Console.WriteLine(surName);                 // в методе доступна переменная этого же метода 
        }                                               // конец конекста метода PrintSurname, переменная surname уничтожается
    }                                                   // конец контекста класса, переменная type уничтожается
}

//  При работе с переменными надо учитывать, что локальные переменные, определенные в методе или в
//  блоке кода, скрывают переменные уровня класса, если их имена совпадают.